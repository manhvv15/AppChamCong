<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:tool="clr-namespace:QuanLyChung365TruocDangNhap.GioiHanIpVaPhanMem.Tools"
    xmlns:uc="[uc ]clr-namspace:QuanLyChung365TruocDangNhap.ThietLapCongTy">
    <!--  Border Style  -->
    <Style x:Key="BorderButonLimitIPnApp" TargetType="Border">
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource #1677ff}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!--  Add your ComboBox parts here (e.g., ToggleButton, Popup, etc.)  -->

                        <!--  TextBox for displaying the selected item  -->
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            VerticalContentAlignment="Center"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            IsReadOnlyCaretVisible="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Text="{Binding Path=SelectedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <!--  Hint text  -->
                        <TextBlock
                            x:Name="HintText"
                            IsHitTestVisible="False"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(materialDesign:HintAssist.Hint)}"
                            Visibility="Collapsed" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Show/hide hint text based on TextBox content  -->
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="HintText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboboxTimePicker" TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <!--<Setter Property="FontSize" Value="16"/>-->
        <Setter Property="Foreground" Value="{DynamicResource #474747}" />
        <Setter Property="BorderBrush" Value="{DynamicResource #CCCCCC}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border />
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border
                                                x:Name="Border"
                                                Grid.ColumnSpan="2"
                                                Background="{DynamicResource #FFFFFF}"
                                                BorderThickness="0"
                                                CornerRadius="5" />
                                            <Path
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource #474747}" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="15,3,54,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="aaaaaaaaaaaaaaaaa"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="15,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="{DynamicResource #474747}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Template="{StaticResource ComboBoxTextBox1}"
                            Visibility="Hidden">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <TextBlock Text="aaaaaaaaaaaaaaaaaaaa" TextTrimming="WordEllipsis" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid>
                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Margin="2,5"
                                    SnapsToDevicePixels="True">
                                    <Grid.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border
                                                    Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}"
                                                    Height="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"
                                                    Background="White"
                                                    CornerRadius="5" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.OpacityMask>
                                    <Border Background="White" CornerRadius="5">
                                        <Border.Effect>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Opacity=".2"
                                                ShadowDepth="0"
                                                Color="Black" />
                                        </Border.Effect>
                                    </Border>
                                    <Border x:Name="DropDownBorder" Background="White" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Border
                                                            Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}"
                                                            Height="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"
                                                            Background="White"
                                                            CornerRadius="5" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource #666666}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>

                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>
</ResourceDictionary>