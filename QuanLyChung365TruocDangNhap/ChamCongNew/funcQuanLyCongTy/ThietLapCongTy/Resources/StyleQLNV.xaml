<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:uc="[uc ]clr-namspace:ChamCong365.ThietLapCongTy">
    <Style x:Key="BorderButonLimitIPnApp" TargetType="Border">
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource #1677ff}" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!--  Add your ComboBox parts here (e.g., ToggleButton, Popup, etc.)  -->

                        <!--  TextBox for displaying the selected item  -->
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            VerticalContentAlignment="Center"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            IsReadOnlyCaretVisible="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Text="{Binding Path=SelectedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <!--  Hint text  -->
                        <TextBlock
                            x:Name="HintText"
                            IsHitTestVisible="False"
                            Text=""
                            Visibility="Collapsed" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Show/hide hint text based on TextBox content  -->
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="HintText" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboboxTimePicker" TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <!--<Setter Property="FontSize" Value="16"/>-->
        <Setter Property="Foreground" Value="{DynamicResource #474747}" />
        <Setter Property="BorderBrush" Value="{DynamicResource #CCCCCC}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border />
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="5">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border
                                                x:Name="Border"
                                                Grid.ColumnSpan="2"
                                                Background="{DynamicResource #FFFFFF}"
                                                BorderThickness="0"
                                                CornerRadius="5" />
                                            <Path
                                                Grid.Column="1"
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource #474747}" />
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="15,3,54,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="aaaaaaaaaaaaaaaaa"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="15,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="{DynamicResource #474747}"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Template="{StaticResource ComboBoxTextBox1}"
                            Visibility="Hidden">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <TextBlock Text="aaaaaaaaaaaaaaaaaaaa" TextTrimming="WordEllipsis" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid>
                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    Margin="2,5"
                                    SnapsToDevicePixels="True">
                                    <Grid.OpacityMask>
                                        <VisualBrush>
                                            <VisualBrush.Visual>
                                                <Border
                                                    Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}"
                                                    Height="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"
                                                    Background="White"
                                                    CornerRadius="5" />
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.OpacityMask>
                                    <Border Background="White" CornerRadius="5">
                                        <Border.Effect>
                                            <DropShadowEffect
                                                BlurRadius="10"
                                                Opacity=".2"
                                                ShadowDepth="0"
                                                Color="Black" />
                                        </Border.Effect>
                                    </Border>
                                    <Border x:Name="DropDownBorder" Background="White" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.OpacityMask>
                                                <VisualBrush>
                                                    <VisualBrush.Visual>
                                                        <Border
                                                            Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}"
                                                            Height="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualHeight}"
                                                            Background="White"
                                                            CornerRadius="5" />
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Grid.OpacityMask>
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </Grid>
                                    </ScrollViewer>
                                </Grid>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource #666666}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>

                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>
    <!--  Border Style  -->
    <Style x:Key="BorderButonNV" TargetType="Border">
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="BorderSelectedNV" TargetType="Border">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderBrush" Value="#666666" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <!--  Texblock Style  -->
    <Style x:Key="TextBlockButonNV" TargetType="TextBlock">
        <Setter Property="Margin" Value="20,10,20,10" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBlocLableNV" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#474747" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--  SimpleStyles: ComboBox  -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                Background="#FFFFFF"
                BorderBrush="#474747"
                BorderThickness="1.3"
                CornerRadius="5" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                Margin="0,0,5,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Data="{DynamicResource iconControlBottomNV}"
                Stroke="#474747"
                StrokeThickness="2" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#FFFFFF" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#474747" />
                <Setter Property="Foreground" Value="#474747" />
                <Setter TargetName="Arrow" Property="Fill" Value="#474747" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>
    <Style x:Key="cbSearch" TargetType="ComboBox">
        <Setter Property="Foreground" Value="#474747" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{DynamicResource ComboBoxToggleButton}" />

                        <ContentPresenter
                            Name="ContentSite"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />

                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="10,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{DynamicResource ComboBoxTextBox}"
                            Visibility="Hidden" />

                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FFFFFF"
                                    BorderBrush="#474747"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#474747" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers />
    </Style>


    <!--  DataGrid Style  -->
    <Style x:Key="DataGridNV" TargetType="DataGrid">
        <Setter Property="BorderThickness" Value="1,0,1,0" />
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Background" Value=" #FFFFFF" />
        <Setter Property="HorizontalGridLinesBrush" Value=" #CCCCCC" />
        <Setter Property="VerticalGridLinesBrush" Value="#ffffff" />
        <Setter Property="RowHeight" Value="50" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="AlternationCount" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ItemsSource.Count}" />
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#4c5bd4" />

                    <Setter Property="Foreground" Value="#FFFFFF" />
                    <Setter Property="FontWeight" Value="Medium" />
                    <Setter Property="FontSize" Value="16" />
                    <Setter Property="MinHeight" Value="50" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="BorderThickness" Value="0,0,1,0" />
                    <Setter Property="BorderBrush" Value="#FFFFFF" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock
                                    Margin="20,5"
                                    Text="{Binding}"
                                    TextWrapping="NoWrap" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="Black" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="#ebebeb" />
                            <Setter Property="BorderThickness" Value="1,0,1,0" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="#ebebeb" />
                            <Setter Property="BorderThickness" Value="1,0,1,0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>